
global:
  node:
    nodeConfig:
      minimumFee: ''
      allowAnyFee: 'false'

    ledgerDistribution:
      awsRegion: us-west-1
      s3Bucket: mobilecoin.chain
      startFrom: last

    networkConfig:
      threshold: '3'
      peers:
        1: 
          peer:
            hostname: '{{ printf "peer1.%s.development.mobilecoin.com" .Release.Namespace }}'
            port: '443'
          client:
            hostname: '{{ printf "node1.%s.development.mobilecoin.com" .Release.Namespace }}'
            port: '443'
          signerPublicKey: ''
          ledgerArchiveLocation: '{{ with .Values.global.node.ledgerDistribution }}{{ printf "https://s3-%s.amazonaws.com/%s/%s/" .awsRegion .s3Bucket $.Values.global.node.networkConfig.peers.1.client.hostname }}{{ end }}'
        2: 
          peer:
            hostname: '{{ printf "peer2.%s.development.mobilecoin.com" .Release.Namespace }}'
            port: '443'
          client:
            hostname: '{{ printf "node2.%s.development.mobilecoin.com" .Release.Namespace }}'
            port: '443'
          signerPublicKey: ''
          ledgerArchiveLocation: '{{ with .Values.global.node.ledgerDistribution }}{{ printf "https://s3-%s.amazonaws.com/%s/%s/" .awsRegion .s3Bucket (printf "node2.%s.development.mobilecoin.com" $.Release.Namespace) }}{{ end }}'
        3: 
          peer:
            hostname: '{{ printf "peer3.%s.development.mobilecoin.com" .Release.Namespace }}'
            port: '443'
          client:
            hostname: '{{ printf "node3.%s.development.mobilecoin.com" .Release.Namespace }}'
            port: '443'
          signerPublicKey: ''
          ledgerArchiveLocation: '{{ with .Values.global.node.ledgerDistribution }}{{ printf "https://s3-%s.amazonaws.com/%s/%s/" .awsRegion .s3Bucket (printf "node3.%s.development.mobilecoin.com" $.Release.Namespace) }}{{ end }}'
        4: 
          peer:
            hostname: '{{ printf "peer4.%s.development.mobilecoin.com" .Release.Namespace }}'
            port: '443'
          client:
            hostname: '{{ printf "node4.%s.development.mobilecoin.com" .Release.Namespace }}'
            port: '443'
          signerPublicKey: ''
          ledgerArchiveLocation: '{{ with .Values.global.node.ledgerDistribution }}{{ printf "https://s3-%s.amazonaws.com/%s/%s/" .awsRegion .s3Bucket (printf "node4.%s.development.mobilecoin.com" $.Release.Namespace) }}{{ end }}'
        5: 
          peer:
            hostname: '{{ printf "peer5.%s.development.mobilecoin.com" .Release.Namespace }}'
            port: '443'
          client:
            hostname: '{{ printf "node5.%s.development.mobilecoin.com" .Release.Namespace }}'
            port: '443'
          signerPublicKey: ''
          ledgerArchiveLocation: '{{ with .Values.global.node.ledgerDistribution }}{{ printf "https://s3-%s.amazonaws.com/%s/%s/" .awsRegion .s3Bucket (printf "node5.%s.development.mobilecoin.com" $.Release.Namespace) }}{{ end }}'

mcCoreCommonConfig:
  enabled: true
  fullnameOverride: mc-core-common-config
  mobileCoinNetwork:
    network: '{{ .Release.Namespace }}'
    partner: 'dev'
  mobilecoind:
    threshold: '{{ .Values.global.networkConfig.threshold }}'
    nodes:
    - client: '{{ printf "%s:443" .Values.global.node.networkConfig.peers.1.client.hostname }}'
      txSourceUrl: '{{ .Values.global.node.networkConfig.1.ledgerArchiveLocation }}'
    - client: '{{ printf "%s:443" .Values.global.node.networkConfig.peers.2.client.hostname }}'
      txSourceUrl: '{{ .Values.global.node.networkConfig.2.ledgerArchiveLocation }}'
    - client: '{{ printf "%s:443" .Values.global.node.networkConfig.peers.3.client.hostname }}'
      txSourceUrl: '{{ .Values.global.node.networkConfig.3.ledgerArchiveLocation }}'
    - client: '{{ printf "%s:443" .Values.global.node.networkConfig.peers.4.client.hostname }}'
      txSourceUrl: '{{ .Values.global.node.networkConfig.4.ledgerArchiveLocation }}'
    - client: '{{ printf "%s:443" .Values.global.node.networkConfig.peers.5.client.hostname }}'
      txSourceUrl: '{{ .Values.global.node.networkConfig.5.ledgerArchiveLocation }}'

consensusNodeConfig1:
  enabled: true
  fullnameOverride: consensus-node-1
  node:
    client:
      hostname: '{{ printf "node1.%s.development.mobilecoin.com" .Release.Namespace }}'
    peer:
      hostname: '{{ printf "peer1.%s.development.mobilecoin.com" .Release.Namespace }}'

consensusNodeConfig2:
  enabled: true
  fullnameOverride: consensus-node-2
  node:
    client:
      hostname: '{{ printf "node2.%s.development.mobilecoin.com" .Release.Namespace }}'
    peer:
      hostname: '{{ printf "peer2.%s.development.mobilecoin.com" .Release.Namespace }}'

consensusNodeConfig3:
  enabled: true
  fullnameOverride: 'consensus-node-3'
  node:
    client:
      hostname: '{{ printf "node3.%s.development.mobilecoin.com" .Release.Namespace }}'
    peer:
      hostname: '{{ printf "peer3.%s.development.mobilecoin.com" .Release.Namespace }}'

consensusNodeConfig4:
  enabled: true
  fullnameOverride: 'consensus-node-4'
  node:
    client:
      hostname: '{{ printf "node4.%s.development.mobilecoin.com" .Release.Namespace }}'
    peer:
      hostname: '{{ printf "peer4.%s.development.mobilecoin.com" .Release.Namespace }}'

consensusNodeConfig5:
  enabled: true
  fullnameOverride: 'consensus-node-5'
  node:
    client:
      hostname: '{{ printf "node5.%s.development.mobilecoin.com" .Release.Namespace }}'
    peer:
      hostname: '{{ printf "peer5.%s.development.mobilecoin.com" .Release.Namespace }}'

fogIngestConfig:
  enabled: true
  fogRecoveryDatabase:
    configMap:
      enabled: true
    secret:
      enabled: true

# fogPublicFQDN:
#   configMap:
#     external: true
#     name: fog-public-fqdn
#   value: ""
#   # Since you can't put structured data in a config-map entry
#   # String value, list of SANs one per line
#   fogReportSANs: ""
#   # fogReportSANs: |-
#   #   one.mc.com
#   #   two.mc.com

# mobileCoinNetwork:
#   network: ""
#   partner: ""

# fogReport:
#   signingCert:
#     crt: ""
#     key: ""
#   configMap:
#     data:
#       # https://docs.diesel.rs/diesel/r2d2/struct.Builder.html
#       POSTGRES_IDLE_TIMEOUT: "60"
#       POSTGRES_MAX_LIFETIME: "120"
#       POSTGRES_CONNECTION_TIMEOUT: "5"
#       POSTGRES_MAX_CONNECTIONS: "3"

# fogView:
#   configMap:
#     data:
#       POSTGRES_IDLE_TIMEOUT: "60"
#       POSTGRES_MAX_LIFETIME: "120"
#       POSTGRES_CONNECTION_TIMEOUT: "5"
#       POSTGRES_MAX_CONNECTIONS: "3"

# fogLedger:
#   configMap:
#     data:
#       POSTGRES_IDLE_TIMEOUT: "60"
#       POSTGRES_MAX_LIFETIME: "120"
#       POSTGRES_CONNECTION_TIMEOUT: "5"
#       POSTGRES_MAX_CONNECTIONS: "3"

# fogIngest:
#   configMap:
#     data:
#       POSTGRES_IDLE_TIMEOUT: "60"
#       POSTGRES_MAX_LIFETIME: "120"
#       POSTGRES_CONNECTION_TIMEOUT: "5"
#       POSTGRES_MAX_CONNECTIONS: "3"

# ### helm install fog-recovery bitnami/postgresql -n <namespace> --set postgresqlDatabase=fog --set auth.existingSecret=fog-recovery-postgresql
# recoveryDatabase:
#   hostname: fog-recovery-postgresql
#   password: postgres
#   username: postgres
#   database: fog
#   port: "5432"
#   options: "?sslmode=disable"

# ias:
#   spid: ""
#   key: ""

# sentry:
#   configMap:
#     data:
#       fog-ingest-sentry-dsn: ""
#       fog-report-sentry-dsn: ""
#       fog-view-sentry-dsn: ""
#       fog-ledger-sentry-dsn: ""
#       consensus-sentry-dsn: ""
#       ledger-distribution-sentry-dsn: ""

# ### Consensus nodes for mobilecoind processes (managed by superviosrd)
# ### Configure with chart external ConfigMap or values here.
# ### peer url must have '?responder-id=' query string if "load balanced"
# ### tx-source-id is the public url for the s3 bucket containing the ledger from the node.
# mobilecoind:
#   quorumSetThreshold: 0
#   nodes: []
#   # - peer: "node1.prod.mobilecoinww.com:443"
#   #   txSourceUrl: https://ledger.mobilecoinww.com/node1.prod.mobilecoinww.com
#   # - peer: "node2.prod.mobilecoinww.com:443"
#   #   txSourceUrl: https://ledger.mobilecoinww.com/node2.prod.mobilecoinww.com
#   # - peer: "node3.prod.mobilecoinww.com:443"
#   #   txSourceUrl: https://ledger.mobilecoinww.com/node3.prod.mobilecoinww.com

