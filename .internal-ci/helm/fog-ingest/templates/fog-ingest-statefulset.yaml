apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.fogIngest.replicaCount }}
  selector:
    matchLabels:
      app: fog-ingest
      {{- include "chart.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "chart.fullname" . }}
  template:
    metadata:
      annotations:
        {{- toYaml .Values.fogIngest.podAnnotations | nindent 8 }}
      labels:
        app: fog-ingest
        {{- include "chart.labels" . | nindent 8 }}
    spec:
      imagePullSecrets:
      {{- toYaml .Values.imagePullSecrets | nindent 6 }}
      terminationGracePeriodSeconds: 30
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      initContainers:
      - name: sysctl
        image: ubuntu:20.04
        command:
        - sysctl
        - -w
        - net.ipv4.tcp_retries2=5
        securityContext:
          privileged: true
          runAsUser: 0
          runAsNonRoot: False
      containers:
      - name: fog-ingest
        image: "{{ .Values.fogIngest.image.org | default .Values.image.org }}/{{ .Values.fogIngest.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.fogIngest.image.pullPolicy }}
        command: [ "/usr/bin/supervisord" ]
        ports:
        - name: ingest
          containerPort: 3226
        - name: peer
          containerPort: 8090
        - name: mgmt
          containerPort: 8000
        env:
        - name: RUST_BACKTRACE
          value: {{ .Values.fogIngest.rust.backtrace | quote }}
        - name: RUST_LOG
          value: {{ .Values.fogIngest.rust.log | quote }}
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        # LOCAL_NODE_ID on ingest needs to be the name of the Service object that points to THIS ingest server
        - name: LOCAL_NODE_ID
          value: "$(MY_POD_NAME).{{ include "chart.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:8090"
        - name: FOG_INGEST_SENTRY_DSN
          valueFrom:
            configMapKeyRef:
              name: {{ include "chart.sentryConfigMapName" . }}
              key: fog-ingest-sentry-dsn
        # Maps to Sentry Environment
        - name: MC_BRANCH
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: FOGDB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "chart.recoveryDatabaseConfigMapName" . }}
              key: postgres-hostname
        - name: FOGDB_USER
          valueFrom:
            configMapKeyRef:
              name: {{ include "chart.recoveryDatabaseConfigMapName" . }}
              key: postgres-username
        - name: FOGDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "chart.recoveryDatabaseSecretName" . }}
              key: postgres-password
        - name: FOGDB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ include "chart.recoveryDatabaseConfigMapName" . }}
              key: postgres-database
        - name: FOGDB_SSL_OPTIONS
          valueFrom:
            configMapKeyRef:
              name: {{ include "chart.recoveryDatabaseConfigMapName" . }}
              key: postgres-ssl-options
        - name: DATABASE_URL
          value: "postgres://$(FOGDB_USER):$(FOGDB_PASSWORD)@$(FOGDB_HOST)/$(FOGDB_DATABASE)$(FOGDB_SSL_OPTIONS)"
        - name: IAS_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "chart.iasSecretName" . }}
              key: key
        - name: IAS_SPID
          valueFrom:
            secretKeyRef:
              name: {{ include "chart.iasSecretName" . }}
              key: spid
        - name: STATE_FILE
          value: "/var/run/ingest-state-file"
        - name: POSTGRES_IDLE_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: {{ include "chart.fogIngestConfigMapName" . }}
              key: POSTGRES_IDLE_TIMEOUT
        - name: POSTGRES_MAX_LIFETIME
          valueFrom:
            configMapKeyRef:
              name: {{ include "chart.fogIngestConfigMapName" . }}
              key: POSTGRES_MAX_LIFETIME
        - name: POSTGRES_CONNECTION_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: {{ include "chart.fogIngestConfigMapName" . }}
              key: POSTGRES_CONNECTION_TIMEOUT
        - name: POSTGRES_MAX_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: {{ include "chart.fogIngestConfigMapName" . }}
              key: POSTGRES_MAX_CONNECTIONS
        volumeMounts:
        - name: aesm-socket-dir
          mountPath: /var/run/aesmd
        - name: fog-data
          mountPath: /fog-data
        - name: ingest-run-data
          mountPath: /ingest-run-data
        - name: supervisor-conf
          mountPath: /etc/supervisor/conf.d
          readOnly: true
        resources:
          {{- toYaml .Values.fogIngest.resources | nindent 10 }}
{{- if eq .Values.jaegerTracing.enabled true }}
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:latest
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 5775
            name: zk-compact-trft
            protocol: UDP
          - containerPort: 5778
            name: config-rest
            protocol: TCP
          - containerPort: 6831
            name: jg-compact-trft
            protocol: UDP
          - containerPort: 6832
            name: jg-binary-trft
            protocol: UDP
          - containerPort: 14271
            name: admin-http
            protocol: TCP
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
        args:
          - --reporter.grpc.host-port={{ .Values.jaegerTracing.collector }}
          - --reporter.type=grpc
          - --agent.tags=cluster=undefined,container.name=fog-ingest,deployment.name={{ include "chart.fullname" . }},host.ip=${HOST_IP:},pod.name=${POD_NAME:},pod.namespace={{ .Release.Namespace }}
{{- end }}
      nodeSelector:
        {{- toYaml .Values.fogIngest.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.fogIngest.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.fogIngest.affinity | nindent 8 }}
      volumes:
      - name: aesm-socket-dir
        emptyDir: {}
      {{- if eq .Values.fogIngest.persistence.enabled false }}
      - name: fog-data
        emptyDir: {}
      {{- end }}
      - name: ingest-run-data
        emptyDir: {}
      - name: supervisor-conf
        projected:
          sources:
          - configMap:
              name: {{ include "chart.fullname" . }}-supervisord-sgx
          - configMap:
              name: {{ include "chart.fullname" . }}-supervisord-daemon
          - configMap:
              name: supervisord-mobilecoind
          - configMap:
              name: {{ include "chart.fullname" . }}-supervisord-fog-ingest
          - configMap:
              name: {{ include "chart.fullname" . }}-supervisord-admin
  {{- if .Values.fogIngest.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: fog-data
    spec:
      {{- toYaml .Values.fogIngest.persistence.spec | nindent 6 }}
  {{- end }}