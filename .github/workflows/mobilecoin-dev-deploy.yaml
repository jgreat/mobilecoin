name: mobilecoin-dev-deploy

on: 
  workflow_dispatch:
    inputs:
      cluster:
        description: "Target Cluster"
        type: string
        required: true
      namespace:
        description: "Target Namespace"
        type: string
        required: true
      version:
        description: "Chart Version"
        type: string
        required: true
      color:
        description: "Ingest Blue/Green"
        type: choice
        options:
        - blue
        - green
        required: true
      delete:
        description: "Delete target namespace"
        type: boolean
        required: false
      reset:
        description: "Reset data in target namespace"
        type: boolean
        required: false

jobs:
  list-values:
    runs-on: self-hosted
    steps:
    - name: values
      run: |
        echo namespace ${{ github.event.inputs.namespace }}
        echo cluster ${{ github.event.inputs.cluster }}
        echo delete ${{ github.event.inputs.delete }}
        echo version ${{ github.event.inputs.version }}

  delete:
    # start after a successful build or destroy is checked on a dispatch
    if: github.event.inputs.delete == 'true'
    runs-on: self-hosted
    steps:
    - name: Start with clean workspace
      run: sudo find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

    - name: Checkout
      uses: actions/checkout@v2

    - name: Delete namespace
      uses: ./.github/actions/helm
      with:
        action: rancher-namespace-delete
        namespace: ${{ github.event.inputs.namespace }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}

  reset:
    if: github.event.inputs.reset == 'true'
    runs-on: self-hosted
    strategy:
      matrix:
        chart:
        - consensus-node-1
        - consensus-node-2
        - consensus-node-3
        - consensus-node-4
        - consensus-node-5
        - fog-ingest-blue
        - fog-ingest-green
        - fog-recovery-postgresql
        # - fog-services
    steps:
    - name: Clean up Workspace
      run: |
        find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

    - name: Checkout
      uses: actions/checkout@v2

    # We don't want to just delete the namespace on every run we need to preserve letsEncrypt certificates due to rate limits.
    # We can delete app charts, postgres and dangling PVCs
    - name: Delete release
      uses: ./.github/actions/helm
      with:
        action: rancher-delete-release
        namespace: ${{ github.event.inputs.namespace }}
        release_name: ${{ matrix.chart }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}

  reset-storage:
    if: success() || failure()
    needs:
    - reset
    runs-on: self-hosted
    steps:
    - name: Error if reset failure
      env:
        STATUS: ${{ needs.reset.result }}
      run: |
        if [ "${STATUS}" == "failure" ]; then exit 1; fi

    - name: Start with clean workspace
      run: sudo find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

    - name: Checkout
      uses: actions/checkout@v2

    # We don't want to just delete the namespace on every run we need to preserve letsEncrypt certificates due to rate limits.
    # We can delete app charts, postgres and dangling PVCs
    - name: Delete release
      uses: ./.github/actions/helm
      with:
        action: rancher-delete-pvcs
        namespace: ${{ github.event.inputs.namespace }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}

  setup-environment:
    needs:
    - delete
    - reset-storage
    runs-on: self-hosted
    if: |
      always() &&
      (needs.reset-storage.result == 'success' || needs.reset-storage.result == 'skipped') &&
      (needs.delete.result == 'success' || needs.delete.result == 'skipped')
    steps:
    - name: Start with clean workspace
      run: find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

    - name: Checkout
      uses: actions/checkout@v2

    - name: Create namespace
      uses: ./.github/actions/helm
      with:
        action: rancher-namespace-create
        namespace: ${{ github.event.inputs.namespace }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}

    - name: Generate environment values file
      env:
        IAS_KEY: ${{ secrets.IAS_KEY }}
        IAS_SPID: ${{ secrets.IAS_SPID }}
        LEDGER_AWS_ACCESS_KEY_ID: ${{ secrets.LEDGER_AWS_ACCESS_KEY_ID }}
        LEDGER_AWS_SECRET_ACCESS_KEY: ${{ secrets.LEDGER_AWS_SECRET_ACCESS_KEY }}
        FOG_REPORT_SIGNING_CERT: ${{ secrets.FOG_REPORT_SIGNING_CERT }}
        FOG_REPORT_SIGNING_CERT_KEY: ${{ secrets.FOG_REPORT_SIGNING_CERT_KEY }}
        # CLIENT_AUTH_TOKEN:
        # SENTRY_DSN_CONSENSUS:
        # SENTRY_DSN_LEDGER_DISTRIBUTION:
        # SENTRY_DSN_FOG_INGEST:
        # SENTRY_DSN_FOG_VIEW:
        # SENTRY_DSN_FOG_LEDGER:
        # SENTRY_DSN_FOG_INGEST:
      run: |
        mkdir -p .tmp/values/
        .internal-ci/util/generate_dev_values.sh > .tmp/values/mc-core-dev-env-values.yaml

    - name: Deploy environment setup
      uses: ./.github/actions/helm
      with:
        action: rancher-helm-deploy
        chart_repo: https://s3.us-east-2.amazonaws.com/charts.mobilecoin.com/
        chart_name: mc-core-dev-env-setup
        chart_version: ${{ github.event.inputs.version }}
        chart_values: .tmp/values/mc-core-dev-env-values.yaml
        release_name: mc-core-dev-env-setup
        namespace: ${{ github.event.inputs.namespace }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}

  consensus-deploy:
    needs:
    - setup-environment
    if: |
      always() &&
      needs.setup-environment.result == 'success'
    runs-on: self-hosted
    strategy:
      matrix:
        release_name:
        - consensus-node-1
        - consensus-node-2
        - consensus-node-3
        - consensus-node-4
        - consensus-node-5
    steps:
    - name: Start with clean workspace
      run: sudo find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

    - name: Checkout
      uses: actions/checkout@v2

    - name: Deploy Consensus nodes
      uses: ./.github/actions/helm
      with:
        action: rancher-helm-deploy
        chart_repo: https://s3.us-east-2.amazonaws.com/charts.mobilecoin.com/
        chart_name: consensus-node
        chart_version: ${{ github.event.inputs.version }}
        chart_set: |
          --set image.org=jgreat
        chart_wait_timeout: 5m
        release_name: ${{ matrix.release_name }}
        namespace: ${{ github.event.inputs.namespace }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}

  postgresql-deploy:
    needs:
    - setup-environment
    if: |
      always() &&
      needs.setup-environment.result == 'success'
    runs-on: self-hosted
    steps:
    - name: Start with clean workspace
      run: sudo find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

    - name: Checkout
      uses: actions/checkout@v2

    - name: Deploy PostgreSQL instance
      uses: ./.github/actions/helm
      with:
        action: rancher-helm-deploy
        chart_repo: https://charts.bitnami.com/bitnami
        chart_name: postgresql
        chart_version: 11.1.1
        chart_set: |
          --set global.postgresql.auth.existingSecret=fog-recovery-postgresql
          --set global.postgresql.auth.database=fog_recovery
          --set architecture=replication
        chart_wait_timeout: 5m
        release_name: fog-recovery-postgresql
        namespace: ${{ github.event.inputs.namespace }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}

  fog-ingest-deploy:
    needs:
    - postgresql-deploy
    - consensus-deploy
    if: |
      always() &&
      needs.postgresql-deploy.result == 'success' &&
      needs.consensus-deploy.result == 'success'
    runs-on: self-hosted
    steps:
    - name: Start with clean workspace
      run: sudo find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

    - name: Checkout
      uses: actions/checkout@v2

    - name: Deploy fog-ingest
      uses: ./.github/actions/helm
      with:
        action: rancher-helm-deploy
        chart_repo: https://s3.us-east-2.amazonaws.com/charts.mobilecoin.com/
        chart_name: fog-ingest
        chart_version: ${{ github.event.inputs.version }}
        chart_wait_timeout: 5m
        chart_set: |
          --set image.org=jgreat
        release_name: fog-ingest-${{ github.event.inputs.color }}
        namespace: ${{ github.event.inputs.namespace }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}

  fog-recovery-migrate-db:
    needs:
    - fog-ingest-deploy
    if: |
      always() &&
      needs.fog-ingest-deploy.result == 'success'
    runs-on: self-hosted
    steps:
    - name: Start with clean workspace
      run: sudo find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

    - name: Checkout
      uses: actions/checkout@v2

    - name: Run fog-recovery database migrations
      uses: ./.github/actions/helm
      with:
        action: fog-recovery-migrate
        ingest_color: ${{ github.event.inputs.color }}
        namespace: ${{ github.event.inputs.namespace }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}

  fog-ingest-activate:
    needs:
    - fog-recovery-migrate-db
    if: |
      always() &&
      needs.fog-recovery-migrate-db.result == 'success'
    runs-on: self-hosted
    steps:
    - name: Start with clean workspace
      run: sudo find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

    - name: Checkout
      uses: actions/checkout@v2

    - name: Activate primary ingest
      uses: ./.github/actions/helm
      with:
        action: fog-ingest-activate
        ingest_color: ${{ github.event.inputs.color }}
        namespace: ${{ github.event.inputs.namespace }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}

  fog-services-deploy:
    needs:
    - fog-recovery-migrate-db
    if: |
      always() &&
      needs.fog-recovery-migrate-db.result == 'success'
    runs-on: self-hosted
    steps:
    - name: Start with clean workspace
      run: sudo find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

    - name: Checkout
      uses: actions/checkout@v2

    - name: Deploy fog-services
      uses: ./.github/actions/helm
      with:
        action: rancher-helm-deploy
        chart_repo: https://s3.us-east-2.amazonaws.com/charts.mobilecoin.com/
        chart_name: fog-services
        chart_version: ${{ github.event.inputs.version }}
        chart_wait_timeout: 5m
        chart_set: |
          --set image.org=jgreat
        release_name: fog-services
        namespace: ${{ github.event.inputs.namespace }}
        rancher_cluster: ${{ secrets.RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.RANCHER_URL }}
        rancher_token: ${{ secrets.RANCHER_TOKEN }}
